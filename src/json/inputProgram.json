var inputPrograms = [
	{
		id: "func1",
		type: "function",
		args: [
		],
		elements: [
			{
				id: "for1",
				type: "for"
			},
			{
				id: "assign1",
				type: "assign"
			}
		] 
	},
	{
		id: "variables",
		type: "variables",
		elements: [
			{
				id: "assign1",
				type: "assign"
			},
			{
				id: "assign2",
				type: "assign"
			},
			{
				id: "assign3",
				type: "assign"
			}
		] 
	},
	{
		id: "programName",
		type: "program",
		elements: [
			{
				id: "assign1",
				type: "assign",
				data:{
					varNameInputType: InputType.lvalue,
					varNameInputText: "var1",
					varValueInputType: InputType.expressionTermLvalueID,
					varValueInputText: "dsa"
				}
			}
		]
	},
	{
		id: "programName2",
		type: "program",
		elements: [
			{
				id: "while2",
				type: "while",
				elements:[
				]
			},
			{
				id: "while1",
				type: "while",
				data:{
					inputType: InputType.logicExpression,
					inputText: "\"str\" OR (dsa AND 8)",
					inputElementList: [
								{
									type: InputType.logicExpressionTermConstantText,
									text: "\"str\""
								},
								{
									type: InputType.logicExpressionTermLocalVariable,
									text: "dsa"
								},
								{
									type: InputType.logicExpressionTermConstantNumber,
									text: "8"
								}
							]
				},
				elements: [
					{
						id: "assign1",
						type: "assign",
						data:{
							varNameInputType: InputType.lvalueID,
							varNameInputText: "var1",
							varValueInputType: InputType.expressionArray,
							varValueInputText: "[0,\"a\",dsa]",
							varValueInputElementList: [
								{
									type: InputType.expressionTermConstNumber,
									text: "0"
								},
								{
									type: InputType.expressionTermConstString,
									text: "\"a\""
								},
								{
									type: InputType.expressionTermLvalueID,
									text: "dsa"
								}
							]
						}
					},{
						id: "assign2",
						type: "assign"
					}
				]
			}
		]
	}
];

